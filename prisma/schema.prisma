// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  role     String @default("user")

  createdAt DateTime   @default(now())
  bookings  Booking[]
  cartItems CartItem[]
}

enum RoomType {
  SINGLE
  DOUBLE
  TRIPLE
  SUITE
  KING
  QUEEN
  TWIN
  DOUBLE_DOUBLE
  TRIPLE_DOUBLE
  SUITE_DOUBLE
  SUITE_KING
}

model Room {
  id            Int      @id @default(autoincrement())
  roomNumber    String   @unique
  type          RoomType
  pricePerNight Int
  description   String?
  images        String[]
  capacity      Int

  createdAt DateTime   @default(now())
  bookings  Booking[]
  cartItems CartItem[]
}

model Service {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  type        String
  price       Int
  images      String[]

  createdAt DateTime @default(now())
  Booking   Booking? @relation(fields: [bookingId], references: [id])
  bookingId Int?
}

model Staff {
  id       Int     @id @default(autoincrement())
  name     String
  role     String
  bio      String?
  photoUrl String?

  createdAt DateTime @default(now())
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

model Booking {
  id           Int      @id @default(autoincrement())
  userId       Int
  roomId       Int
  checkInDate  DateTime
  checkOutDate DateTime
  adults       Int
  children     Int

  status     BookingStatus @default(PENDING)
  totalPrice Int
  createdAt  DateTime      @default(now())

  user User @relation(fields: [userId], references: [id])
  room Room @relation(fields: [roomId], references: [id])

  extraServices ExtraService[]

  Service Service[]
}

model ExtraService {
  id        Int      @id @default(autoincrement())
  name      String
  bookingId Int
  createdAt DateTime @default(now())

  booking Booking @relation(fields: [bookingId], references: [id])
}

model CartItem {
  id        Int      @id @default(autoincrement())
  userId    Int
  roomId    Int
  checkIn   DateTime
  checkOut  DateTime
  adults    Int
  children  Int
  services  String?
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
  room Room @relation(fields: [roomId], references: [id])
}
